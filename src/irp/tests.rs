use super::render::{render, Vartable};
use crate::rawir;

#[test]
fn test() {
    let mut vars = Vartable::new();

    vars.set("F".to_string(), 1, 8);
    vars.set("D".to_string(), 0xe9, 8);
    vars.set("S".to_string(), 0xfe, 8);

    let res = render(
        "{38.0k,564}<1,-1|1,-3>(16,-8,D:8,S:8,F:8,~F:8,1,^108m)+",
        vars,
    );

    // irptransmogrifier.sh  --irp "{38.0k,564}<1,-1|1,-3>(16,-8,D:8,S:8,F:8,~F:8,1,^108m)+" render -r -n F=1,D=0xe9,S=0xfe
    assert_eq!(
        res,
        Ok(rawir::parse("+9024,-4512,+564,-1692,+564,-564,+564,-564,+564,-1692,+564,-564,+564,-1692,+564,-1692,+564,-1692,+564,-564,+564,-1692,+564,-1692,+564,-1692,+564,-1692,+564,-1692,+564,-1692,+564,-1692,+564,-1692,+564,-564,+564,-564,+564,-564,+564,-564,+564,-564,+564,-564,+564,-564,+564,-564,+564,-1692,+564,-1692,+564,-1692,+564,-1692,+564,-1692,+564,-1692,+564,-1692,+564,-35244").unwrap())
    );

    let mut vars = Vartable::new();

    vars.set("F".to_string(), 1, 8);
    vars.set("D".to_string(), 0xe9, 8);
    vars.set("T".to_string(), 0, 8);

    let res = render(
        "{36k,msb,889}<1,-1|-1,1>(1:1,~F:1:6,T:1,D:5,F:6,^114m)+",
        vars,
    );

    // irptransmogrifier.sh  --irp "{36k,msb,889}<1,-1|-1,1>(1:1,~F:1:6,T:1,D:5,F:6,^114m)+" render -r -n F=1,T=0,D=0xe9

    assert_eq!(
        res,
        Ok(rawir::parse("+889,-889,+1778,-889,+889,-1778,+1778,-889,+889,-1778,+1778,-889,+889,-889,+889,-889,+889,-889,+889,-1778,+889,-89108").unwrap())
    );

    let mut vars = Vartable::new();

    vars.set("F".to_string(), 1, 8);
    vars.set("D".to_string(), 0xe9, 8);
    vars.set("S".to_string(), 0x88, 8);

    let res = render(
        "{38k,400}<1,-1|1,-3>(8,-4,170:8,90:8,15:4,D:4,S:8,F:8,E:4,C:4,1,-48)+ {E=1,C=D^S:4:0^S:4:4^F:4:0^F:4:4^E:4}",
        vars,
    );

    assert_eq!(
        res,
        Ok(rawir::parse("+3200,-1600,+400,-400,+400,-1200,+400,-400,+400,-1200,+400,-400,+400,-1200,+400,-400,+400,-1200,+400,-400,+400,-1200,+400,-400,+400,-1200,+400,-1200,+400,-400,+400,-1200,+400,-400,+400,-1200,+400,-1200,+400,-1200,+400,-1200,+400,-1200,+400,-400,+400,-400,+400,-1200,+400,-400,+400,-400,+400,-400,+400,-1200,+400,-400,+400,-400,+400,-400,+400,-1200,+400,-1200,+400,-400,+400,-400,+400,-400,+400,-400,+400,-400,+400,-400,+400,-400,+400,-1200,+400,-400,+400,-400,+400,-400,+400,-1200,+400,-400,+400,-400,+400,-1200,+400,-19200").unwrap())
    );
}
